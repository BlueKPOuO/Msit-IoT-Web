@model IEnumerable<IoTWeb.Models.BulletinBoard>
@using IoTWeb.Areas.Client.Hubs
@{
    ViewBag.Title = "Home Page";
}

@section styles
{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" / >
    <style>
        .linkbtn {
            z-index:1000;
            display: none;
            position: absolute;
            left: 300px;
            top: 100px;
            background-color: cadetblue;
            width: 700px;
            height: 500px;
            color: black;
            border: 10px solid rgba(0, 0, 0,0.6);
            padding: 30px;
        }
        .divc {
            background-color: azure;
            border-radius: 10px;
        }
        .container1 {
            position: relative;
        }

        .image {
            opacity: 1;
            display: block;
            width: 100%;
            height: auto;
            transition: .5s ease;
            backface-visibility: hidden;
        }

        .middle {
            transition: .5s ease;
            opacity: 0;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            text-align: center;
        }

        .container1:hover .image {
            opacity: 0.3;
        }

        .container1:hover .middle {
            opacity: 1;
        }

        .text {
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            padding: 16px 0px;
        }

        .fc-today {
            background-color: #E7717D !important;
        }
    </style>

}

@Html.Hidden("Get", Url.Action("GetIoTData", "Home", new { Area = "" }))
<div class="row col-md-12" style="margin-top:20px;">
    <div class="col-md-6">
        <div style="height:300px;background-color:bisque;text-align:center;padding:15px">
            <span style="font-size:30px;">常用設備</span>
            <div style="height:1px;background-color:black"></div>
            <div id="Equip" class="row">

            </div>
        </div>

        <div style="height:300px;background-color:bisque;margin-top:10px;padding:15px;text-align:center;">
            <span style="font-size:30px">近期公告</span>
            <div style="height:1px;background-color:black"></div>
            <table id="boards" class="table display">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.annDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.annTitle)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.annAnnex)
                        </th>

                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td style="text-align:left">
                                @Html.DisplayFor(modelItem => item.annDate)
                            </td>
                            <td style="text-align:left">
                                <a onclick="showdata(@item.annID)">@Html.DisplayFor(modelItem => item.annTitle)</a>
                                <div class="linkbtn" id=@item.annID>
                                    <p style="float:right;color:white;cursor:pointer" onclick="closedata(@item.annID)">X</p>
                                    <h2></h2>
                                    <p><span class="title1">時間</span><br /><div class="divc">@Html.DisplayFor(modelItem => item.annDate)</div></p>
                                    <p><span class="title1">主旨</span><br /><div class="divc">@Html.DisplayFor(modelItem => item.annTitle)</div></p>
                                    <p><span class="title1">發布人員</span><br /><div class="divc">@Html.DisplayFor(modelItem => item.StaffID)</div></p>
                                    <p><span class="title1">公告等級</span><br /><div class="divc">@Html.DisplayFor(modelItem => item.annGrade)</div></p>
                                    <p><span class="title1">內容</span><br /><div class="divc">@Html.DisplayFor(modelItem => item.annContent)</div></p>
                                </div>
                                @if ((DateTime.Now - item.annDate).Value.Days <= 3)
                                {<img src="@Url.Content("~/img/new.png")" />}
                            </td>
                            <td style="text-align:left">
                                <a href="@Url.Action("Download", "BulletinBoards", new { annID = item.annID })">@Html.DisplayFor(modelItem => item.annFilename)</a>
                            </td>
                        </tr>
                    }
                </thead>
            </table>

            <div id="Place" class="row"></div>

        </div>

    </div>
    <div class="col-md-6">
        <div id="calendar" style="background-color:bisque">
        </div>
        <div style="background-color:bisque">
            @Html.Partial("_TempGauge")
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.0/moment.min.js"></script>
    <!-- FullCalendar v3.8.1 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.print.css" rel="stylesheet" media="print"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/locale/zh-tw.js"></script>
    <!--  HighchartsGauge -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <!-- SignalR -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>

    <script type="text/javascript">
        let temp = 0;
        let humi = 0;
        let gas = 0;
        let distance = 0;

        $(function () {
            //Proxy created on the fly
            var iot = $.connection.ioTDataHub;

            //Declare a function on the hub so the server can invoke it
            iot.client.displayIoTData = function () {
                getData();
            };
            //Start the connection

            $.connection.hub.start();
            getData();
        });

        function getData() {
            $.ajax({
                url: $("#Get").val(),
                type: 'GET',
                datatype: 'json',
                success: function (data) {
                    $.each(data.listData, function (i, model) {
                        switch (model.Topic) {
                            case "home_dht_h":
                                humi = model.Value
                                break;
                            case "home_dht_t":
                                temp = model.Value
                                break;
                            case "MQ5_01":
                                gas = model.Value
                                break;
                            case "US_01":
                                distance = model.Value
                                break;
                        }
                    })
                }
            })
            let point, newVal;

            if (chartSpeed) {
                point = chartSpeed.series[0].points[0];
                newVal = parseInt(temp);

                point.update(newVal);
            }

            if (chartRpm) {
                point = chartRpm.series[0].points[0];
                newVal = parseInt(humi);

                point.update(newVal);
            }

            if (chartGas) {
                point = chartGas.series[0].points[0];
                newVal = parseInt(gas);

                point.update(newVal);
            }
        }

        //highchart gauge
        var gaugeOptions = {
            chart: {
                type: 'solidgauge',
                backgroundColor: 'rgba(0,0,0,0)'
            },

            title: null,

            pane: {
                center: ['50%', '85%'],
                size: '100%',
                startAngle: -90,
                endAngle: 90,
                background: {
                    backgroundColor:
                        Highcharts.defaultOptions.legend.backgroundColor || '#EEE',
                    innerRadius: '60%',
                    outerRadius: '100%',
                    shape: 'arc'
                }
            },

            exporting: {
                enabled: false
            },

            tooltip: {
                enabled: false
            },

            // the value axis
            yAxis: {
                stops: [
                    [0.1, '#55BF3B'], // green
                    [0.5, '#DDDF0D'], // yellow
                    [0.9, '#DF5353'] // red
                ],
                lineWidth: 0,
                tickWidth: 0,
                minorTickInterval: null,
                tickAmount: 2,
                title: {
                    y: -70
                },
                labels: {
                    y: 16
                }
            },

            plotOptions: {
                solidgauge: {
                    dataLabels: {
                        y: 5,
                        borderWidth: 0,
                        useHTML: true
                    }
                }
            }
        };

        // The temperature gauge
        var chartSpeed = Highcharts.chart('container-speed', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 50,
                title: {
                    text: 'Temperature'
                }
            },

            credits: {
                enabled: false
            },

            series: [{
                name: 'Temperature',
                data: [80],
                dataLabels: {
                    format:
                        '<div style="text-align:center">' +
                        '<span style="font-size:15px">{y}</span><br/>' +
                        '<span style="font-size:12px;opacity:0.4">℃</span>' +
                        '</div>'
                },
                tooltip: {
                    valueSuffix: ' ℃'
                }
            }]

        }));

        // The Humidity gauge
        var chartRpm = Highcharts.chart('container-humi', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 100,
                title: {
                    text: 'Humidity'
                }
            },

            series: [{
                name: 'Humidity',
                data: [1],
                dataLabels: {
                    format:
                        '<div style="text-align:center">' +
                        '<span style="font-size:15px">{y:.1f}</span><br/>' +
                        '<span style="font-size:12px;opacity:0.4">' +
                        '%' +
                        '</span>' +
                        '</div>'
                },
                tooltip: {
                    valueSuffix: ' %'
                }
            }]

        }));

        // The Gas gauge
        var chartGas = Highcharts.chart('container-gas', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 10000,
                title: {
                    text: 'Gas'
                }
            },

            credits: {
                enabled: false
            },

            series: [{
                name: 'Gas',
                data: [80],
                dataLabels: {
                    format:
                        '<div style="text-align:center">' +
                        '<span style="font-size:15px">{y}</span><br/>' +
                        '<span style="font-size:12px;opacity:0.4">ppm</span>' +
                        '</div>'
                },
                tooltip: {
                    valueSuffix: ' ppm'
                }
            }]
        }));
        /*
        // Bring life to the dials
        setInterval(function () {
            // Speed
            var point,
                newVal,
                inc;

            if (chartSpeed) {
                point = chartSpeed.series[0].points[0];
                inc = Math.round((Math.random() - 0.5) * 100);
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 200) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }

            // RPM
            if (chartRpm) {
                point = chartRpm.series[0].points[0];
                inc = Math.random() - 0.5;
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 5) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }
        }, 2000);
        */
        $(document).ready(function () {
            $("#calendar").fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title 預約行事曆',
                    right: 'month,agendaWeek,agendaDay,listWeek'
                },
                eventLimit: true, // allow "more" link when too many events
                eventLimitText: "More", //sets the text for more events
                timezone:'local',
                height: 410,
                displayEventTime: true,
                events: '@Url.Action("Calendar","Home", new { Area = "Client" })',
            });

            var equip = $("#Equip");
            var place = $("#Place");
            $.getJSON('@Url.Action("MostUsedEquip","Home",new { Area = "Client"})').done(function (datas) {
                $.each(datas, function (i, model) {
                    let img = "";
                            if (model.Picture == null) {
                                img = '@Url.Content("~/Image/no-image.png")';
                            } else {
                                img = "data: image/jpeg;base64," + arrayBufferToBase64(model.Picture)
                            }
                    //equip.append(`<div class="container1 col-md-3 col-md-offset-1" ><img src="${img}" class="image img-rounded image-responsive" style="height:200px;width:100%"/><div class="middle"><div class="text">${model.EquipmentName}</div><div class="text">總使用時數：${model.TotalTime}</div></div></div>`);
                    equip.append(`<div class="container1 col-md-4" ><div class="card" style="margin-top:5px"><img src="${img}" class="image img-thumbnail" style="height:200px;width:100%" /><div class="middle"><div class="text">${model.EquipmentName}</div><div class="text">已使用：${model.TotalTime}小時</div></div><div class="card-body"><a href="@Url.Action("Create","EquipReservations",new { Area="Client"})/${model.EquipmentID}" class="btn btn-primary">前往預約</a></div></div></div>`);
                });
                console.log(datas);
            })
        })
        function arrayBufferToBase64(buffer) {
            let binary = '';
            let bytes = new Uint8Array(buffer);
            let len = bytes.byteLength;
            for (let i = 0; i < len; i++) {
                binary += String.fromCharCode(bytes[i]);
            }
            return window.btoa(binary);
        }
        //$("#container1").on("click",)

        //modal開
        function showdata(id) {
            document.getElementById(id).style.display = "block";
        }
        //modal關
        function closedata(id) {
            document.getElementById(id).style.display = "none";
        }
    </script>

    <style>
        .highcharts-figure .chart-container {
            width: 150px;
            height: 100px;
            float: left;
        }

        .highcharts-figure, .highcharts-data-table table {
            width: 300px;
            margin: 0 auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #EBEBEB;
            margin: 10px auto;
            text-align: center;
            width: 50%;
            max-width: 250px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }
    </style>

}