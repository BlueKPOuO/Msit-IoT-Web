@using IoTWeb.Areas.Client.Hubs
@{
    ViewBag.Title = "Home Page";
}

@section styles
{
}
<div class="row col-md-10 col-md-offset-1" style="margin-top:10px">
    <div class="col-md-6">
        @Html.Hidden("Get", Url.Action("GetIoTData", "Home", new { Area = "" }))
    </div>
    <div class="col-md-6">
        <div id="calendar">

        </div>
        <div>
            @Html.Partial("_TempGauge")
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.0/moment.min.js"></script>
    <!-- FullCalendar v3.8.1 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.print.css" rel="stylesheet" media="print"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.8.1/fullcalendar.min.js"></script>
    <!--  HighchartsGauge -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <!-- SignalR -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>

    <script type="text/javascript">
        let temp = 0;
        let humi = 0;
        let gas = 0;
        let distance = 0;

        $(function () {
            //Proxy created on the fly
            var iot = $.connection.ioTDataHub;

            //Declare a function on the hub so the server can invoke it
            iot.client.displayIoTData = function () {
                getData();
            };
            //Start the connection

            $.connection.hub.start();
            getData();
        });

        function getData() {
            $.ajax({
                url: $("#Get").val(),
                type: 'GET',
                datatype: 'json',
                success: function (data) {
                    $.each(data.listData, function (i, model) {
                        switch (model.Topic) {
                            case "home_dht_h":
                                temp = model.Value
                                break;
                            case "home_dht_t":
                                humi = model.Value
                                break;
                            case "MQ5_01":
                                gas = model.Value
                                break;
                            case "US_01":
                                distance = model.Value
                                break;
                        }
                    })
                }
            })

        }

        //highchart gauge
        var gaugeOptions = {
            chart: {
                type: 'solidgauge'
            },

            title: null,

            pane: {
                center: ['50%', '85%'],
                size: '140%',
                startAngle: -90,
                endAngle: 90,
                background: {
                    backgroundColor:
                        Highcharts.defaultOptions.legend.backgroundColor || '#EEE',
                    innerRadius: '60%',
                    outerRadius: '100%',
                    shape: 'arc'
                }
            },

            exporting: {
                enabled: false
            },

            tooltip: {
                enabled: false
            },

            // the value axis
            yAxis: {
                stops: [
                    [0.1, '#55BF3B'], // green
                    [0.5, '#DDDF0D'], // yellow
                    [0.9, '#DF5353'] // red
                ],
                lineWidth: 0,
                tickWidth: 0,
                minorTickInterval: null,
                tickAmount: 2,
                title: {
                    y: -70
                },
                labels: {
                    y: 16
                }
            },

            plotOptions: {
                solidgauge: {
                    dataLabels: {
                        y: 5,
                        borderWidth: 0,
                        useHTML: true
                    }
                }
            }
        };

        // The speed gauge
        var chartSpeed = Highcharts.chart('container-speed', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 200,
                title: {
                    text: 'Speed'
                }
            },

            credits: {
                enabled: false
            },

            series: [{
                name: 'Speed',
                data: [80],
                dataLabels: {
                    format:
                        '<div style="text-align:center">' +
                        '<span style="font-size:25px">{y}</span><br/>' +
                        '<span style="font-size:12px;opacity:0.4">km/h</span>' +
                        '</div>'
                },
                tooltip: {
                    valueSuffix: ' km/h'
                }
            }]

        }));

        // The RPM gauge
        var chartRpm = Highcharts.chart('container-rpm', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 5,
                title: {
                    text: 'RPM'
                }
            },

            series: [{
                name: 'RPM',
                data: [1],
                dataLabels: {
                    format:
                        '<div style="text-align:center">' +
                        '<span style="font-size:25px">{y:.1f}</span><br/>' +
                        '<span style="font-size:12px;opacity:0.4">' +
                        '* 1000 / min' +
                        '</span>' +
                        '</div>'
                },
                tooltip: {
                    valueSuffix: ' revolutions/min'
                }
            }]

        }));

        // Bring life to the dials
        setInterval(function () {
            // Speed
            var point,
                newVal,
                inc;

            if (chartSpeed) {
                point = chartSpeed.series[0].points[0];
                inc = Math.round((Math.random() - 0.5) * 100);
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 200) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }

            // RPM
            if (chartRpm) {
                point = chartRpm.series[0].points[0];
                inc = Math.random() - 0.5;
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 5) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }
        }, 2000);

        $(document).ready(function () {
            $("#calendar").fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listWeek'
                },
                eventLimit: true, // allow "more" link when too many events
                eventLimitText: "More", //sets the text for more events
                timezone:'local',
                height: 410,
                displayEventTime: true,
                events: '@Url.Action("Calendar","Home", new { Area = "Client" })',
            });
        })
    </script>

    <style>
        .highcharts-figure .chart-container {
            width: 150px;
            height: 100px;
            float: left;
        }

        .highcharts-figure, .highcharts-data-table table {
            width: 300px;
            margin: 0 auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #EBEBEB;
            margin: 10px auto;
            text-align: center;
            width: 50%;
            max-width: 250px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }
    </style>

}